# Copyright (C) Metaswitch Networks 2017
# If license terms are provided to you in a COPYING file in the root directory
# of the source code repository by which you are accessing this code, then
# the license outlined in that COPYING file applies to your use.
# Otherwise no rights are granted except for those provided to you by
# Metaswitch Networks in a separate written agreement.

heat_template_version: 2013-05-23

description: >
  Security Groups for Clearwater to use

parameters:
  name_prefix:
    type: string
    description: Security group name prefix
    default: clearwater

resources:
  base_mgmt:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { __name_prefix__: { get_param: "name_prefix" } }, template: __name_prefix__-base-mgmt } }
      description: Base security group for all Clearwater nodes (management)
      rules:
        # All egress traffic
        - direction: egress
          ethertype: IPv4
        - direction: egress
          ethertype: IPv6
        # ICMP
        - protocol: icmp
        # SSH
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        # SNMP
        - protocol: udp
          port_range_min: 161
          port_range_max: 161
        # etcd
        - protocol: tcp
          port_range_min: 2380
          port_range_max: 2380
          remote_mode: remote_group_id
          #remote_group_id: { get_resource: base_mgmt } # omit remote_group_id to reference yourself
        - protocol: tcp
          port_range_min: 4000
          port_range_max: 4000
          remote_mode: remote_group_id
          #remote_group_id: { get_resource: base_mgmt } # omit remote_group_id to reference yourself

  dns:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { __name_prefix__: { get_param: "name_prefix" } }, template: __name_prefix__-dns } }
      description: Security group for DNS nodes
      rules:
        # All egress traffic
        - direction: egress
          ethertype: IPv4
        - direction: egress
          ethertype: IPv6
        # ICMP
        - protocol: icmp
        # SSH
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        # DNS
        - protocol: udp
          port_range_min: 53
          port_range_max: 53
        - protocol: tcp
          port_range_min: 53
          port_range_max: 53

  ellis_mgmt:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { __name_prefix__: { get_param: "name_prefix" } }, template: __name_prefix__-ellis-mgmt } }
      description: Security group for Ellis nodes (management)
      rules:
        # HTTP
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        # HTTPS
        - protocol: tcp
          port_range_min: 443
          port_range_max: 443

  bono_sig:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { __name_prefix__: { get_param: "name_prefix" } }, template: __name_prefix__-bono-sig } }
      description: Security group for Bono nodes (signaling)
      rules:
        # STUN/TURN
        - protocol: udp
          port_range_min: 3478
          port_range_max: 3478
        - protocol: tcp
          port_range_min: 3478
          port_range_max: 3478
        # Internal SIP
        - protocol: tcp
          port_range_min: 5058
          port_range_max: 5058
          remote_mode: remote_group_id
          #remote_group_id: { get_resource: bono_sig } # omit remote_group_id to reference yourself
        - protocol: tcp
          port_range_min: 5058
          port_range_max: 5058
          remote_mode: remote_group_id
          remote_group_id: { get_resource: sprout_sig_outbound }
        # External SIP
        - protocol: udp
          port_range_min: 5060
          port_range_max: 5060
        - protocol: tcp
          port_range_min: 5060
          port_range_max: 5060
        # External SIP/WebSocket
        - protocol: tcp
          port_range_min: 5062
          port_range_max: 5062
        # RTP
        - protocol: udp
          port_range_min: 32768
          port_range_max: 65535


  sprout_sig_outbound:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { __name_prefix__: { get_param: "name_prefix" } }, template: __name_prefix__-sprout-sig-outbound } }
      description: Security group for Sprout nodes outbound traffic (signaling)
      rules:
        # Internal SIP
        - protocol: tcp
          port_range_min: 5052
          port_range_max: 5052
          remote_mode: remote_group_id
          #remote_group_id: { get_resource: sprout_sig_outbound } # omit remote_group_id to reference yourself
        - protocol: tcp
          port_range_min: 5054
          port_range_max: 5054
          remote_mode: remote_group_id
          #remote_group_id: { get_resource: sprout_sig_outbound } # omit remote_group_id to reference yourself

  sprout_sig_inbound:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { __name_prefix__: { get_param: "name_prefix" } }, template: __name_prefix__-sprout-sig-inbound } }
      description: Security group for Sprout nodes inbound traffic (signaling) 
      rules:
        # Internal SIP
        - protocol: tcp
          port_range_min: 5052
          port_range_max: 5052
          remote_mode: remote_group_id
          remote_group_id: { get_resource: bono_sig }
        - protocol: tcp
          port_range_min: 5054
          port_range_max: 5054
          remote_mode: remote_group_id
          remote_group_id: { get_resource: bono_sig }
        # Chronos timer pops
        - protocol: tcp
          port_range_min: 9888
          port_range_max: 9888
          remote_mode: remote_group_id
          remote_group_id: { get_resource: vellum_sig_outbound }
        # Notifications from Homestead
        - protocol: tcp
          port_range_min: 9888
          port_range_max: 9888
          remote_mode: remote_group_id
          remote_group_id: { get_resource: dime_sig }

  homer_mgmt:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { __name_prefix__: { get_param: "name_prefix" } }, template: __name_prefix__-homer-mgmt } }
      description: Security group for Homer nodes (management)
      rules:
        # Ut/HTTP
        - protocol: tcp
          port_range_min: 7888
          port_range_max: 7888
        - protocol: tcp
          port_range_min: 7888
          port_range_max: 7888
          remote_mode: remote_group_id
          remote_group_id: { get_resource: sprout_sig_outbound }

  homer_sig:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { __name_prefix__: { get_param: "name_prefix" } }, template: __name_prefix__-homer-sig } }
      description: Security group for Homer nodes (signaling)
      rules:
        # Ut/HTTP
        - protocol: tcp
          port_range_min: 7888
          port_range_max: 7888
        - protocol: tcp
          port_range_min: 7888
          port_range_max: 7888
          remote_mode: remote_group_id
          remote_group_id: { get_resource: sprout_sig_outbound }
        - protocol: tcp
          port_range_min: 9160
          port_range_max: 9160
          remote_mode: remote_group_id
          #remote_group_id: { get_resource: homer_sig } # omit remote_group_id to reference yourself

  dime_mgmt:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { __name_prefix__: { get_param: "name_prefix" } }, template: __name_prefix__-dime-mgmt } }
      description: Security group for Dime nodes (management)
      rules:
        # REST-ful Provisioning API
        - protocol: tcp
          port_range_min: 8889
          port_range_max: 8889
          remote_mode: remote_group_id
          remote_group_id: { get_resource: ellis_mgmt }

  dime_sig:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { __name_prefix__: { get_param: "name_prefix" } }, template: __name_prefix__-dime-sig } }
      description: Security group for Dime nodes (signaling)
      rules:
        # Cx-like HTTP API
        - protocol: tcp
          port_range_min: 8888
          port_range_max: 8888
          remote_mode: remote_group_id
          remote_group_id: { get_resource: bono_sig }
        - protocol: tcp
          port_range_min: 8888
          port_range_max: 8888
          remote_mode: remote_group_id
          remote_group_id: { get_resource: sprout_sig_outbound }
        # Rf-like/HTTP API
        - protocol: tcp
          port_range_min: 10888
          port_range_max: 10888
          remote_mode: remote_group_id
          remote_group_id: { get_resource: bono_sig }
        - protocol: tcp
          port_range_min: 10888
          port_range_max: 10888
          remote_mode: remote_group_id
          remote_group_id: { get_resource: sprout_sig_outbound }
        # Chronos timer pops
        - protocol: tcp
          port_range_min: 10888
          port_range_max: 10888
          remote_mode: remote_group_id
          remote_group_id: { get_resource: vellum_sig_outbound }

  vellum_sig_outbound:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { __name_prefix__: { get_param: "name_prefix" } }, template: __name_prefix__-vellum-sig-outbound } }
      description: Security group for Vellum nodes outbound traffic (signaling)
      rules:
        # Chronos
        - protocol: tcp
          port_range_min: 7253
          port_range_max: 7253
          remote_mode: remote_group_id
          #remote_group_id: { get_resource: vellum_sig_outbound } # omit remote_group_id to reference yourself
        # Cassandra
        - protocol: tcp
          port_range_min: 7000
          port_range_max: 7000
          remote_mode: remote_group_id
          #remote_group_id: { get_resource: vellum_sig_outbound } # omit remote_group_id to reference yourself
        # Memcached listening to Astaire
        - protocol: tcp
          port_range_min: 11211
          port_range_max: 11211
          remote_mode: remote_group_id
          #remote_group_id: { get_resource: vellum_sig_outbound } # omit remote_group_id to reference yourself

  vellum_sig_inbound:
    type: OS::Neutron::SecurityGroup
    properties:
      name: { str_replace: { params: { __name_prefix__: { get_param: "name_prefix" } }, template: __name_prefix__-vellum-sig-inbound } }
      description: Security group for Vellum nodes inbound traffic (signaling)
      rules:
        # Astaire
        - protocol: tcp
          port_range_min: 11311
          port_range_max: 11311
          remote_mode: remote_group_id
          remote_group_id: { get_resource: sprout_sig_outbound }
        # Astaire 
        - protocol: tcp
          port_range_min: 11311
          port_range_max: 11311
          remote_mode: remote_group_id
          remote_group_id: { get_resource: dime_sig }
        # Chronos 
        - protocol: tcp
          port_range_min: 7253
          port_range_max: 7253
          remote_mode: remote_group_id
          remote_group_id: { get_resource: sprout_sig_outbound }
        # Chronos
        - protocol: tcp
          port_range_min: 7253
          port_range_max: 7253
          remote_mode: remote_group_id
          remote_group_id: { get_resource: dime_sig }
        # Cassandra Thrift
        - protocol: tcp
          port_range_min: 9160
          port_range_max: 9160
          remote_mode: remote_group_id
          remote_group_id: { get_resource: dime_sig }
        # Cassandra Thrift
        - protocol: tcp
          port_range_min: 9160
          port_range_max: 9160
          remote_mode: remote_group_id
          remote_group_id: { get_resource: homer_sig }

outputs:
  base_mgmt:
    description: Base security group for all Clearwater nodes (management)
    value: { get_resource: base_mgmt } 
  dns:
    description: Security group for DNS nodes
    value: { get_resource: dns }
  ellis_mgmt:
    description: Security group for Ellis nodes (managment)
    value: { get_resource: ellis_mgmt }
  bono_sig:
    description: Security group for Bono nodes (signaling)
    value: { get_resource: bono_sig }
  sprout_sig_outbound:
    description: Security group for Sprout nodes outbound traffic (signaling)
    value: { get_resource: sprout_sig_outbound }
  sprout_sig_inbound:
    description: Security group for Sprout nodes inbound traffic (signaling)
    value: { get_resource: sprout_sig_inbound }
  homer_mgmt:
    description: Security group for Homer nodes (management)
    value: { get_resource: homer_mgmt }
  homer_sig:
    description: Security group for Homer nodes (signaling)
    value: { get_resource: homer_sig }
  dime_mgmt:
    description: Security group for Dime nodes (management)
    value: { get_resource: dime_mgmt }
  dime_sig:
    description: Security group for Dime nodes (signaling)
    value: { get_resource: dime_sig }
  vellum_sig_outbound:
    description: Security group for Vellum nodes outbound traffic (signaling)
    value: { get_resource: vellum_sig_outbound }
  vellum_sig_inbound:
    description: Security group for Vellum nodes inbound traffic (signaling)
    value: { get_resource: vellum_sig_inbound }
